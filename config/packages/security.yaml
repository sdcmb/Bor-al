security:
    encoders:
      App\Entity\User:
        algorithm: bcrypt #cryptage du mot de passe de l'entité user

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database:
          entity:
            class: App\Entity\User
            property: email #identifiant utiliser pour permettre à symfony de retrouver l'utilisateur
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            http_basic: ~

            provider: in_database

            form_login: #utilisation d'un formulaire de connexion
              login_path: security_login #la route à prendre en charge
              check_path: security_login #la route à utliser pour vérifié les infos saisie

            logout: #déconnexion avec la route à prendre en charge et la route de redirection
              path: security_logout
              target: accueil

            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
    role_hierarchy:
        ROLE_ADMIN:      ROLE_USER
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
